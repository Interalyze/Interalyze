{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Avatar = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatar.displayName = AvatarPrimitive.Root.displayName\r\n\r\nconst AvatarImage = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Image>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn(\"aspect-square h-full w-full\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\r\n\r\nconst AvatarFallback = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback }\r\n"],"names":[],"mappings":";;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,sMAAM,UAAU,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,mKAAgB,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,QAAQ;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAgB,QAAQ,CAAC,WAAW"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/Sidebar.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n\r\nexport default function Sidebar() {\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      {/* Logo */}\r\n      <div className=\"sidebar-logo\">\r\n        <h1>InterAlyze</h1>\r\n      </div>\r\n\r\n      {/* User Profile */}\r\n      <div className=\"sidebar-profile\">\r\n        <Avatar className=\"avatar\">\r\n          <AvatarImage src=\"/path-to-profile.jpg\" alt=\"Ahmet Ince\" />\r\n          <AvatarFallback>AI</AvatarFallback>\r\n        </Avatar>\r\n        <p className=\"name\">Ahmet Ince</p>\r\n      </div>\r\n\r\n      {/* Navigation Links */}\r\n      <nav className=\"sidebar-nav\">\r\n        <ul>\r\n          <li>\r\n            <Button variant=\"ghost\" className=\"active\">\r\n              Overview\r\n            </Button>\r\n          </li>\r\n          <li>\r\n            <Button variant=\"ghost\">Candidates</Button>\r\n          </li>\r\n          <li>\r\n            <Button variant=\"ghost\">Create Candidate</Button>\r\n          </li>\r\n          <li>\r\n            <Button variant=\"ghost\">Generate Reports</Button>\r\n          </li>\r\n          <li>\r\n            <Button variant=\"ghost\">My Company</Button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAM,WAAU;;0BAEf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;8BAAG;;;;;;;;;;;0BAIN,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2HAAA,CAAA,SAAM;wBAAC,WAAU;;0CAChB,8OAAC,2HAAA,CAAA,cAAW;gCAAC,KAAI;gCAAuB,KAAI;;;;;;0CAC5C,8OAAC,2HAAA,CAAA,iBAAc;0CAAC;;;;;;;;;;;;kCAElB,8OAAC;wBAAE,WAAU;kCAAO;;;;;;;;;;;;0BAItB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;;sCACC,8OAAC;sCACC,cAAA,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAQ,WAAU;0CAAS;;;;;;;;;;;sCAI7C,8OAAC;sCACC,cAAA,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;0CAAQ;;;;;;;;;;;sCAE1B,8OAAC;sCACC,cAAA,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;0CAAQ;;;;;;;;;;;sCAE1B,8OAAC;sCACC,cAAA,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;0CAAQ;;;;;;;;;;;sCAE1B,8OAAC;sCACC,cAAA,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;0CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpC"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/sidebarlayout.jsx"],"sourcesContent":["import Sidebar from \"@/components/Sidebar\";\r\n\r\nexport default function SidebarLayout({ children }) {\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* Sidebar */}\r\n      <Sidebar />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 overflow-y-auto\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,cAAc,EAAE,QAAQ,EAAE;IAChD,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,sHAAA,CAAA,UAAO;;;;;0BAGR,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RechartsPrimitive from \"recharts\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = { light: \"\", dark: \".dark\" } as const\r\n\r\nexport type ChartConfig = {\r\n  [k in string]: {\r\n    label?: React.ReactNode\r\n    icon?: React.ComponentType\r\n  } & (\r\n    | { color?: string; theme?: never }\r\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\r\n  )\r\n}\r\n\r\ntype ChartContextProps = {\r\n  config: ChartConfig\r\n}\r\n\r\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst ChartContainer = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    config: ChartConfig\r\n    children: React.ComponentProps<\r\n      typeof RechartsPrimitive.ResponsiveContainer\r\n    >[\"children\"]\r\n  }\r\n>(({ id, className, children, config, ...props }, ref) => {\r\n  const uniqueId = React.useId()\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-chart={chartId}\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  )\r\n})\r\nChartContainer.displayName = \"Chart\"\r\n\r\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\r\n  const colorConfig = Object.entries(config).filter(\r\n    ([, config]) => config.theme || config.color\r\n  )\r\n\r\n  if (!colorConfig.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color =\r\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\r\n      itemConfig.color\r\n    return color ? `  --color-${key}: ${color};` : null\r\n  })\r\n  .join(\"\\n\")}\r\n}\r\n`\r\n          )\r\n          .join(\"\\n\"),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip\r\n\r\nconst ChartTooltipContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\r\n    React.ComponentProps<\"div\"> & {\r\n      hideLabel?: boolean\r\n      hideIndicator?: boolean\r\n      indicator?: \"line\" | \"dot\" | \"dashed\"\r\n      nameKey?: string\r\n      labelKey?: string\r\n    }\r\n>(\r\n  (\r\n    {\r\n      active,\r\n      payload,\r\n      className,\r\n      indicator = \"dot\",\r\n      hideLabel = false,\r\n      hideIndicator = false,\r\n      label,\r\n      labelFormatter,\r\n      labelClassName,\r\n      formatter,\r\n      color,\r\n      nameKey,\r\n      labelKey,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    const tooltipLabel = React.useMemo(() => {\r\n      if (hideLabel || !payload?.length) {\r\n        return null\r\n      }\r\n\r\n      const [item] = payload\r\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\r\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n      const value =\r\n        !labelKey && typeof label === \"string\"\r\n          ? config[label as keyof typeof config]?.label || label\r\n          : itemConfig?.label\r\n\r\n      if (labelFormatter) {\r\n        return (\r\n          <div className={cn(\"font-medium\", labelClassName)}>\r\n            {labelFormatter(value, payload)}\r\n          </div>\r\n        )\r\n      }\r\n\r\n      if (!value) {\r\n        return null\r\n      }\r\n\r\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\r\n    }, [\r\n      label,\r\n      labelFormatter,\r\n      payload,\r\n      hideLabel,\r\n      labelClassName,\r\n      config,\r\n      labelKey,\r\n    ])\r\n\r\n    if (!active || !payload?.length) {\r\n      return null\r\n    }\r\n\r\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\r\n          className\r\n        )}\r\n      >\r\n        {!nestLabel ? tooltipLabel : null}\r\n        <div className=\"grid gap-1.5\">\r\n          {payload.map((item, index) => {\r\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\r\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n            const indicatorColor = color || item.payload.fill || item.color\r\n\r\n            return (\r\n              <div\r\n                key={item.dataKey}\r\n                className={cn(\r\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\r\n                  indicator === \"dot\" && \"items-center\"\r\n                )}\r\n              >\r\n                {formatter && item?.value !== undefined && item.name ? (\r\n                  formatter(item.value, item.name, item, index, item.payload)\r\n                ) : (\r\n                  <>\r\n                    {itemConfig?.icon ? (\r\n                      <itemConfig.icon />\r\n                    ) : (\r\n                      !hideIndicator && (\r\n                        <div\r\n                          className={cn(\r\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\r\n                            {\r\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                              \"w-1\": indicator === \"line\",\r\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                                indicator === \"dashed\",\r\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                            }\r\n                          )}\r\n                          style={\r\n                            {\r\n                              \"--color-bg\": indicatorColor,\r\n                              \"--color-border\": indicatorColor,\r\n                            } as React.CSSProperties\r\n                          }\r\n                        />\r\n                      )\r\n                    )}\r\n                    <div\r\n                      className={cn(\r\n                        \"flex flex-1 justify-between leading-none\",\r\n                        nestLabel ? \"items-end\" : \"items-center\"\r\n                      )}\r\n                    >\r\n                      <div className=\"grid gap-1.5\">\r\n                        {nestLabel ? tooltipLabel : null}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {itemConfig?.label || item.name}\r\n                        </span>\r\n                      </div>\r\n                      {item.value && (\r\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\r\n                          {item.value.toLocaleString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartTooltipContent.displayName = \"ChartTooltip\"\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend\r\n\r\nconst ChartLegendContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> &\r\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\r\n      hideIcon?: boolean\r\n      nameKey?: string\r\n    }\r\n>(\r\n  (\r\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    if (!payload?.length) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex items-center justify-center gap-4\",\r\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n          className\r\n        )}\r\n      >\r\n        {payload.map((item) => {\r\n          const key = `${nameKey || item.dataKey || \"value\"}`\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n\r\n          return (\r\n            <div\r\n              key={item.value}\r\n              className={cn(\r\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\r\n              )}\r\n            >\r\n              {itemConfig?.icon && !hideIcon ? (\r\n                <itemConfig.icon />\r\n              ) : (\r\n                <div\r\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                  style={{\r\n                    backgroundColor: item.color,\r\n                  }}\r\n                />\r\n              )}\r\n              {itemConfig?.label}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartLegendContent.displayName = \"ChartLegend\"\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(\r\n  config: ChartConfig,\r\n  payload: unknown,\r\n  key: string\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined\r\n\r\n  let configLabelKey: string = key\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key as keyof typeof payload] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key as keyof typeof payload] as string\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[\r\n      key as keyof typeof payloadPayload\r\n    ] as string\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key as keyof typeof config]\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/stressChart.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Bar, BarChart, CartesianGrid, Cell, LabelList, XAxis, YAxis } from \"recharts\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport {\r\n  ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/components/ui/chart\";\r\n\r\n// Define the type for a question\r\ntype QuestionData = {\r\n  question: string;\r\n  stress: number; // 0 or 1\r\n  confidence: number; // Positive number\r\n};\r\n\r\nconst chartConfig: ChartConfig = {\r\n  confidence: {\r\n    label: \"Confidence\",\r\n  },\r\n};\r\n\r\ninterface StressBarChartProps {\r\n  newQuestion?: QuestionData; // Optional prop for new question\r\n}\r\n\r\nexport function StressBarChart({ newQuestion }: StressBarChartProps) {\r\n  const [stressData, setStressData] = useState<QuestionData[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (newQuestion) {\r\n      setStressData((prevData) => [\r\n        ...prevData,\r\n        {\r\n          ...newQuestion,\r\n          confidence: newQuestion.stress === 1 ? -newQuestion.confidence : newQuestion.confidence,\r\n        },\r\n      ]);\r\n    }\r\n  }, [newQuestion]);\r\n\r\n  return (\r\n    <Card className=\"h-[21rem] w-full flex flex-col\">\r\n      <CardHeader className=\"flex-shrink-0\">\r\n        <CardTitle>Stress Analysis</CardTitle>\r\n        <CardDescription>Stress levels per question</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"flex-1 flex justify-start items-start\">\r\n        <div className=\"w-[90%] h-[150px] max-w-[400px] max-h-[125px]\">\r\n          <ChartContainer config={chartConfig}>\r\n            <BarChart\r\n              width={400}\r\n              height={150}\r\n              data={stressData}\r\n              margin={{ top: 0, right: 10, left: -30, bottom: 0 }}\r\n            >\r\n              <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"question\" />\r\n              <YAxis domain={[-100, 100]} />\r\n              <ChartTooltip\r\n                cursor={false}\r\n                content={<ChartTooltipContent hideLabel hideIndicator />}\r\n              />\r\n              <Bar dataKey=\"confidence\">\r\n                <LabelList position=\"insideEnd\" dataKey=\"question\" fillOpacity={1} />\r\n                {stressData.map((item, index) => (\r\n                  <Cell\r\n                    key={index}\r\n                    fill={\r\n                      item.stress === 1\r\n                        ? \"hsl(var(--chart-red))\"\r\n                        : \"hsl(var(--chart-green))\"\r\n                    }\r\n                  />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ChartContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAQA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;;;AA2BA,MAAM,cAA2B;IAC/B,YAAY;QACV,OAAO;IACT;AACF;AAMO,SAAS,eAAe,EAAE,WAAW,EAAuB;IACjE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAE/D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf,cAAc,CAAC,WAAa;uBACvB;oBACH;wBACE,GAAG,WAAW;wBACd,YAAY,YAAY,MAAM,KAAK,IAAI,CAAC,YAAY,UAAU,GAAG,YAAY,UAAU;oBACzF;iBACD;QACH;IACF,GAAG;QAAC;KAAY;IAEhB,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,yHAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,yHAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,yHAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,yHAAA,CAAA,cAAW;gBAAC,WAAU;0BACrB,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,0HAAA,CAAA,iBAAc;wBAAC,QAAQ;kCACtB,cAAA,8OAAC,oJAAA,CAAA,WAAQ;4BACP,OAAO;4BACP,QAAQ;4BACR,MAAM;4BACN,QAAQ;gCAAE,KAAK;gCAAG,OAAO;gCAAI,MAAM,CAAC;gCAAI,QAAQ;4BAAE;;8CAElD,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,UAAU;oCAAO,iBAAgB;;;;;;8CAChD,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;;;;;;8CACf,8OAAC,qJAAA,CAAA,QAAK;oCAAC,QAAQ;wCAAC,CAAC;wCAAK;qCAAI;;;;;;8CAC1B,8OAAC,0HAAA,CAAA,eAAY;oCACX,QAAQ;oCACR,uBAAS,8OAAC,0HAAA,CAAA,sBAAmB;wCAAC,SAAS;wCAAC,aAAa;;;;;;;;;;;8CAEvD,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;;sDACX,8OAAC,yJAAA,CAAA,YAAS;4CAAC,UAAS;4CAAY,SAAQ;4CAAW,aAAa;;;;;;wCAC/D,WAAW,GAAG,CAAC,CAAC,MAAM,sBACrB,8OAAC,oJAAA,CAAA,OAAI;gDAEH,MACE,KAAK,MAAM,KAAK,IACZ,0BACA;+CAJD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAezB"}},
    {"offset": {"line": 939, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 945, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/ui/breadcrumb.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Breadcrumb = React.forwardRef<\r\n  HTMLElement,\r\n  React.ComponentPropsWithoutRef<\"nav\"> & {\r\n    separator?: React.ReactNode\r\n  }\r\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\r\nBreadcrumb.displayName = \"Breadcrumb\"\r\n\r\nconst BreadcrumbList = React.forwardRef<\r\n  HTMLOListElement,\r\n  React.ComponentPropsWithoutRef<\"ol\">\r\n>(({ className, ...props }, ref) => (\r\n  <ol\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nBreadcrumbList.displayName = \"BreadcrumbList\"\r\n\r\nconst BreadcrumbItem = React.forwardRef<\r\n  HTMLLIElement,\r\n  React.ComponentPropsWithoutRef<\"li\">\r\n>(({ className, ...props }, ref) => (\r\n  <li\r\n    ref={ref}\r\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\r\n    {...props}\r\n  />\r\n))\r\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\r\n\r\nconst BreadcrumbLink = React.forwardRef<\r\n  HTMLAnchorElement,\r\n  React.ComponentPropsWithoutRef<\"a\"> & {\r\n    asChild?: boolean\r\n  }\r\n>(({ asChild, className, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"a\"\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      className={cn(\"transition-colors hover:text-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\r\n\r\nconst BreadcrumbPage = React.forwardRef<\r\n  HTMLSpanElement,\r\n  React.ComponentPropsWithoutRef<\"span\">\r\n>(({ className, ...props }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    role=\"link\"\r\n    aria-disabled=\"true\"\r\n    aria-current=\"page\"\r\n    className={cn(\"font-normal text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\r\n\r\nconst BreadcrumbSeparator = ({\r\n  children,\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"li\">) => (\r\n  <li\r\n    role=\"presentation\"\r\n    aria-hidden=\"true\"\r\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\r\n    {...props}\r\n  >\r\n    {children ?? <ChevronRight />}\r\n  </li>\r\n)\r\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\r\n\r\nconst BreadcrumbEllipsis = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"span\">) => (\r\n  <span\r\n    role=\"presentation\"\r\n    aria-hidden=\"true\"\r\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\r\n    {...props}\r\n  >\r\n    <MoreHorizontal className=\"h-4 w-4\" />\r\n    <span className=\"sr-only\">More</span>\r\n  </span>\r\n)\r\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\r\n\r\nexport {\r\n  Breadcrumb,\r\n  BreadcrumbList,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n  BreadcrumbEllipsis,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAIA;AAHA;AACA;AAAA;;;;;;AAIA,MAAM,2BAAa,sMAAM,UAAU,CAKjC,CAAC,EAAE,GAAG,OAAO,EAAE,oBAAQ,8OAAC;QAAI,KAAK;QAAK,cAAW;QAAc,GAAG,KAAK;;;;;;AACzE,WAAW,WAAW,GAAG;AAEzB,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4FACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,oCAAoC;QACjD,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,sMAAM,UAAU,CAKrC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACnC,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,MAAK;QACL,iBAAc;QACd,gBAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,sBAAsB,CAAC,EAC3B,QAAQ,EACR,SAAS,EACT,GAAG,OACwB,iBAC3B,8OAAC;QACC,MAAK;QACL,eAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;kBAER,0BAAY,8OAAC,sNAAA,CAAA,eAAY;;;;;;;;;;AAG9B,oBAAoB,WAAW,GAAG;AAElC,MAAM,qBAAqB,CAAC,EAC1B,SAAS,EACT,GAAG,OAC0B,iBAC7B,8OAAC;QACC,MAAK;QACL,eAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4CAA4C;QACzD,GAAG,KAAK;;0BAET,8OAAC,gNAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAG9B,mBAAmB,WAAW,GAAG"}},
    {"offset": {"line": 1066, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1072, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/components/personalityChart.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Bar, BarChart, XAxis, YAxis, Cell } from \"recharts\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport {\r\n  ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/components/ui/chart\";\r\n\r\nconst chartConfig = {\r\n  openness: {\r\n    label: \"Openness\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n  agreeableness: {\r\n    label: \"Agreeableness\",\r\n    color: \"hsl(var(--chart-2))\",\r\n  },\r\n  conscientiousness: {\r\n    label: \"Conscientiousness\",\r\n    color: \"hsl(var(--chart-3))\",\r\n  },\r\n  extraversion: {\r\n    label: \"Extraversion\",\r\n    color: \"hsl(var(--chart-4))\",\r\n  },\r\n  neuroticism: {\r\n    label: \"Neuroticism\",\r\n    color: \"hsl(var(--chart-5))\",\r\n  },\r\n} satisfies ChartConfig;\r\n\r\ninterface PersonalityBarChartProps {\r\n  newTraits?: {\r\n    openness: number;\r\n    agreeableness: number;\r\n    conscientiousness: number;\r\n    extraversion: number;\r\n    neuroticism: number;\r\n  };\r\n}\r\n\r\nexport function PersonalityBarChart({ newTraits }: PersonalityBarChartProps) {\r\n  const placeholderData = {\r\n    openness: 0.85,\r\n    agreeableness: 0.70,\r\n    conscientiousness: 0.60,\r\n    extraversion: 0.50,\r\n    neuroticism: 0.30,\r\n  };\r\n\r\n  const [personalityData, setPersonalityData] = useState<\r\n    { trait: string; confidence: number; fill: string }[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    const traits = newTraits || placeholderData;\r\n\r\n    const updatedData = Object.entries(traits).map(([trait, confidence]) => ({\r\n      trait,\r\n      confidence,\r\n      fill: chartConfig[trait as keyof typeof chartConfig]?.color || \"hsl(var(--chart-default))\",\r\n    }));\r\n\r\n    setPersonalityData(updatedData);\r\n  }, [newTraits]);\r\n\r\n  return (\r\n    <Card className=\"h-[21rem] w-full flex flex-col\">\r\n      <CardHeader className=\"flex-shrink-0\">\r\n        <CardTitle>Personality Analysis</CardTitle>\r\n        <CardDescription>Big Five Personality Traits</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"flex-1 flex justify-start items-start\">\r\n        <div className=\"w-[90%] h-[150px] max-w-[400px] max-h-[125px]\">\r\n          <ChartContainer config={chartConfig}>\r\n            <BarChart\r\n              data={personalityData}\r\n              layout=\"vertical\"\r\n              margin={{\r\n                left: 60,\r\n              }}\r\n            >\r\n              <YAxis\r\n                dataKey=\"trait\"\r\n                type=\"category\"\r\n                tickLine={false}\r\n                tickMargin={10}\r\n                axisLine={false}\r\n                tickFormatter={(value) =>\r\n                  chartConfig[value as keyof typeof chartConfig]?.label\r\n                }\r\n              />\r\n              <XAxis type=\"number\" domain={[0, 1]} hide />\r\n              <ChartTooltip\r\n                cursor={false}\r\n                content={<ChartTooltipContent hideLabel />}\r\n              />\r\n              <Bar dataKey=\"confidence\" layout=\"vertical\" radius={5}>\r\n                {personalityData.map((entry, index) => (\r\n                  <Cell key={index} fill={entry.fill} />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ChartContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAQA;AAVA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;;;AAoBA,MAAM,cAAc;IAClB,UAAU;QACR,OAAO;QACP,OAAO;IACT;IACA,eAAe;QACb,OAAO;QACP,OAAO;IACT;IACA,mBAAmB;QACjB,OAAO;QACP,OAAO;IACT;IACA,cAAc;QACZ,OAAO;QACP,OAAO;IACT;IACA,aAAa;QACX,OAAO;QACP,OAAO;IACT;AACF;AAYO,SAAS,oBAAoB,EAAE,SAAS,EAA4B;IACzE,MAAM,kBAAkB;QACtB,UAAU;QACV,eAAe;QACf,mBAAmB;QACnB,cAAc;QACd,aAAa;IACf;IAEA,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAEnD,EAAE;IAEJ,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,aAAa;QAE5B,MAAM,cAAc,OAAO,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,OAAO,WAAW,GAAK,CAAC;gBACvE;gBACA;gBACA,MAAM,WAAW,CAAC,MAAkC,EAAE,SAAS;YACjE,CAAC;QAED,mBAAmB;IACrB,GAAG;QAAC;KAAU;IAEd,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,yHAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,yHAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,yHAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,yHAAA,CAAA,cAAW;gBAAC,WAAU;0BACrB,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,0HAAA,CAAA,iBAAc;wBAAC,QAAQ;kCACtB,cAAA,8OAAC,oJAAA,CAAA,WAAQ;4BACP,MAAM;4BACN,QAAO;4BACP,QAAQ;gCACN,MAAM;4BACR;;8CAEA,8OAAC,qJAAA,CAAA,QAAK;oCACJ,SAAQ;oCACR,MAAK;oCACL,UAAU;oCACV,YAAY;oCACZ,UAAU;oCACV,eAAe,CAAC,QACd,WAAW,CAAC,MAAkC,EAAE;;;;;;8CAGpD,8OAAC,qJAAA,CAAA,QAAK;oCAAC,MAAK;oCAAS,QAAQ;wCAAC;wCAAG;qCAAE;oCAAE,IAAI;;;;;;8CACzC,8OAAC,0HAAA,CAAA,eAAY;oCACX,QAAQ;oCACR,uBAAS,8OAAC,0HAAA,CAAA,sBAAmB;wCAAC,SAAS;;;;;;;;;;;8CAEzC,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;oCAAa,QAAO;oCAAW,QAAQ;8CACjD,gBAAgB,GAAG,CAAC,CAAC,OAAO,sBAC3B,8OAAC,oJAAA,CAAA,OAAI;4CAAa,MAAM,MAAM,IAAI;2CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7B"}},
    {"offset": {"line": 1253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1259, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/debug/Desktop/Interalyze/frontend/app/page.jsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport SidebarLayout from \"@/components/sidebarlayout\";\r\nimport { StressBarChart } from \"@/components/stressChart\";\r\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink,BreadcrumbList,BreadcrumbSeparator } from \"@/components/ui/breadcrumb\"; // Import Breadcrumb components\r\nimport { PersonalityBarChart } from \"@/components/personalityChart\";\r\n\r\nconst transcript = [\r\n  {\r\n    question: \"So how are you doing?\",\r\n    answer: \"I'm pretty good.\",\r\n    startTime: 0,\r\n    endTime: 5,\r\n  },\r\n  {\r\n    question: \"Ok well so please tell me about yourself.\",\r\n    answer:\r\n      \"Ok uhm so have you looked at my resume or should I alright so I guess ah I am course 6-7 here at M.I.T ah which is computational biology...\",\r\n    startTime: 6,\r\n    endTime: 60,\r\n  },\r\n  {\r\n    question: \"So please tell me about a time that you demonstrated leadership.\",\r\n    answer:\r\n      \"Ok uhm one of the things we have to do for Camp Kesem is fundraise all the money to run the camp which is over $50,000. Ah so one of the things that I individually spearhead every year is called the Camp Kesem date auction...\",\r\n    startTime: 61,\r\n    endTime: 102,\r\n  },\r\n  {\r\n    question:\r\n      \"Tell me about a time when you were working on a team and faced with a challenge, how did you solve that problem?\",\r\n    answer:\r\n      \"Ahh I guess the easiest team project I had was last semester, uhm I worked on this six double o five project which is algorithm or software architecture. And we were put in a group of 3 people and it was standard you know we signed the contract everyone is supposed to work equally but it ended up being by the end of it that someone didn't like put their fair share of work in... Ah essentially we talked to him we didn't really get it out we actually had to go to some of the T.A's we got a little bit ah and that kinda like pushed him forward so I mean I guess what I am showing is like I'm not afraid to go to the right method or like authority like where in cases this situation presents itself.\",\r\n    startTime: 103,\r\n    endTime: 150,\r\n  },\r\n  {\r\n    question: \"Oh yes. Alright tell me about one of your weaknesses and how you plan to overcome it.\",\r\n    answer:\r\n      \"Uhmmm. I would say for this job ah I'm a little technically underprepared. Ah I've only taken the introductory software classes so far and as well as introductory bio classes but I think just from sheer interest and sheer effort I will be able to kinda overcome these obstacles.\",\r\n    startTime: 151,\r\n    endTime: 180,\r\n  },\r\n  {\r\n    question: \"Now why do you think we should hire you?\",\r\n    answer:\r\n      \"Ah I'm very interested in the subject of computation biology and I think that I will be able to contribute a lot to this field uhm I've had a good amount of experience and I think I will be a solid intern.\",\r\n    startTime: 181,\r\n    endTime: 197,\r\n  },\r\n];\r\n\r\nexport default function CandidateDashboard() {\r\n  const videoRef = useRef(null);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [personalityChartData, setPersonalityChartData] = useState([]);\r\n  const [skills, setSkills] = useState([]);\r\n  const [newQuestion, setNewQuestion] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAnalysis = async () => {\r\n      const currentAnswer = transcript[currentIndex]?.answer;\r\n\r\n      if (!currentAnswer) return;\r\n\r\n      try {\r\n        // Stress Analysis API\r\n        const stressResponse = await fetch(\r\n          \"http://127.0.0.1:8000/api/analyze-stress/\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ texts: [currentAnswer] }),\r\n          }\r\n        );\r\n        const stressResult = await stressResponse.json();\r\n\r\n        // Extract stress data\r\n        const stressData = {\r\n          question: `Q${currentIndex + 1}`,\r\n          stress: stressResult.stress_analysis?.[0]?.confidence > 0.5 ? 1 : 0,\r\n          confidence: Math.round(\r\n            (stressResult.stress_analysis?.[0]?.confidence || 0) * 100\r\n          ),\r\n        };\r\n\r\n        // Pass stress data to the chart\r\n        setNewQuestion(stressData);\r\n\r\n        // Personality Analysis API\r\n        const personalityResponse = await fetch(\r\n          \"http://127.0.0.1:8000/api/analyze-personality/\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ texts: [currentAnswer] }),\r\n          }\r\n        );\r\n        const personalityResult = await personalityResponse.json();\r\n\r\n        // Update personality chart data\r\n        setPersonalityChartData((prevData) => [\r\n          ...prevData,\r\n          {\r\n            question: `Q${currentIndex + 1}`,\r\n            openness: personalityResult.personality_scores?.[0]?.openness || 0,\r\n            agreeableness:\r\n              personalityResult.personality_scores?.[0]?.agreeableness || 0,\r\n            conscientiousness:\r\n              personalityResult.personality_scores?.[0]?.conscientiousness ||\r\n              0,\r\n            extraversion:\r\n              personalityResult.personality_scores?.[0]?.extraversion || 0,\r\n            neuroticism:\r\n              personalityResult.personality_scores?.[0]?.neuroticism || 0,\r\n          },\r\n        ]);\r\n\r\n        // Update skills\r\n        setSkills([\r\n          \"Teamwork\",\r\n          \"Discipline\",\r\n          \"React\",\r\n          \"Django\",\r\n          \"C++\",\r\n          \"Python\",\r\n          ...(personalityResult.skills || []),\r\n        ]);\r\n      } catch (error) {\r\n        console.error(\"Error fetching analysis:\", error);\r\n      }\r\n    };\r\n\r\n    if (currentIndex < transcript.length) {\r\n      fetchAnalysis();\r\n    }\r\n\r\n    const currentElement = document.querySelector(\r\n      `#transcript-item-${currentIndex}`\r\n    );\r\n    currentElement?.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n  }, [currentIndex]);\r\n\r\n  const handleTimeUpdate = () => {\r\n    const currentTime = videoRef.current?.currentTime;\r\n    if (!currentTime) return;\r\n\r\n    const currentSegmentIndex = transcript.findIndex(\r\n      (segment) =>\r\n        currentTime >= segment.startTime && currentTime <= segment.endTime\r\n    );\r\n\r\n    if (currentSegmentIndex !== -1 && currentSegmentIndex !== currentIndex) {\r\n      setCurrentIndex(currentSegmentIndex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SidebarLayout>\r\n      <main className=\"flex-1 bg-gray-100 p-6\">\r\n        {/* Breadcrumbs */}\r\n        <Breadcrumb className=\"mb-4\">\r\n          <BreadcrumbList>\r\n            <BreadcrumbItem>\r\n              <BreadcrumbLink href=\"/\">Home</BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbSeparator />\r\n            <BreadcrumbItem>\r\n              <BreadcrumbLink href=\"/candidates\">Candidates</BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbSeparator />\r\n            <BreadcrumbItem isCurrent>\r\n              <BreadcrumbLink href=\"#\">Transcript Analysis</BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n          </BreadcrumbList>\r\n        </Breadcrumb>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-x-12\">\r\n          {/* Left Column */}\r\n          <div className=\"space-y-6\">\r\n            {/* Video Hosting */}\r\n            <Card className=\"h-[21rem]  w-full\">\r\n              <CardContent className=\"bg-black h-full flex items-center justify-center\">\r\n                <video\r\n                  ref={videoRef}\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                  controls\r\n                  className=\"w-full h-full\"\r\n                >\r\n                  <source src=\"/path-to-video.mp4\" type=\"video/mp4\" />\r\n                </video>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Stress Bar Chart */}\r\n            <StressBarChart newQuestion={newQuestion} />\r\n\r\n            {/* Personality Traits */}\r\n            <PersonalityBarChart\r\n              newTraits={personalityChartData[currentIndex]}/>\r\n          </div>\r\n\r\n          {/* Right Column */}\r\n          <div className=\"space-y-6\">\r\n            {/* Person Details */}\r\n            <Card className=\"h-[10.5rem]  w-full\">\r\n              <CardHeader>\r\n                <CardTitle>Person Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p>Details about the person go here.</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Transcript */}\r\n            <Card className=\"h-[54rem] w-full\">\r\n              <CardHeader>\r\n                <CardTitle>Transcript</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"overflow-y-auto h-[50rem]\">\r\n                {transcript.map((segment, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`mb-4 ${\r\n                      index <= currentIndex ? \"font-bold\" : \"font-normal\"\r\n                    }`}\r\n                  >\r\n                    <p>\r\n                      <span className=\"text-gray-600\">Q: </span>\r\n                      {segment.question}\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"text-gray-600\">A: </span>\r\n                      {segment.answer}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Skills Card */}\r\n        <Card className=\"mt-6 h-[4rem] w-full col-span-2\">\r\n          <CardHeader>\r\n            <CardTitle>Skills</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"flex gap-2 flex-wrap\">\r\n            {skills.map((skill, index) => (\r\n              <Badge key={index} variant=\"secondary\">\r\n                {skill}\r\n              </Badge>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n      </main>\r\n    </SidebarLayout>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}